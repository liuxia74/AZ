X[1,]
mean(X[,4])
source("./Simulation_fun.R")
simulation_fun(n= 400, mv_cond = NULL, tissue_cond = "tissue.use== 'MEDIUM'", alpha = 0.05, 
Iter = 1000, hist_data = data, beta = beta, var = var_select)
simulation_fun(n= 400, mv_cond =NULL, tissue_cond = NULL, alpha = 0.05, 
Iter = 1000, hist_data = data, beta = beta, var = var_select)
## sample size = 400, mucus viscosity > 1.2
simulation_fun(n= 400, mv_cond ="mucus.viscosity > 2", tissue_cond = NULL, alpha = 0.05, 
Iter = 1000, hist_data = data, beta = beta, var = var_select)
## sample size = 400, tissue.use == 'MEDIUM'
simulation_fun(n= 400, mv_cond = NULL, tissue_cond = "tissue.use== 'MEDIUM'", alpha = 0.05, 
Iter = 1000, hist_data = data, beta = beta, var = var_select)
## sample size = 800, mucus viscosity > 2
simulation_fun(n= 3000, mv_cond ="mucus.viscosity > 1.2", tissue_cond = NULL, alpha = 0.05, 
Iter = 5000, hist_data = data, beta = beta, var = var_select)
## sample size = 800, general population
simulation_fun(n= 800, mv_cond =NULL, tissue_cond = NULL, alpha = 0.05, 
Iter = 5000, hist_data = data, beta = beta, var = var_select)
## sample size = 800, mucus viscosity > 1.2
simulation_fun(n= 800, mv_cond ="mucus.viscosity > 2", tissue_cond = NULL, alpha = 0.05, 
Iter = 5000, hist_data = data, beta = beta, var = var_select)
## sample size = 800, tissue.use == 'MEDIUM'
simulation_fun(n= 800, mv_cond = NULL, tissue_cond = "tissue.use== 'MEDIUM'", alpha = 0.05, 
Iter = 5000, hist_data = data, beta = beta, var = var_select)
##
simulation_fun(n= 3000, mv_cond =NULL, tissue_cond = NULL, alpha = 0.05, 
Iter = 5000, hist_data = data, beta = beta, var = var_select)
## sample size = 3000, mucus viscosity > 2
simulation_fun(n= 3000, mv_cond ="mucus.viscosity > 1.2", tissue_cond = NULL, alpha = 0.05, 
Iter = 5000, hist_data = data, beta = beta, var = var_select)
## sample size = 3000, tissue.use == 'MEDIUM'
simulation_fun(n= 3000, mv_cond = NULL, tissue_cond = "tissue.use== 'MEDIUM'", alpha = 0.05, 
Iter = 5000, hist_data = data, beta = beta, var = var_select)
simulation_fun(n= 2000, mv_cond ="mucus.viscosity > 2", tissue_cond = NULL, alpha = 0.05, 
Iter = 5000, hist_data = data, beta = beta, var = var_select)
median(data$mucus.viscosity)
simulation_fun(n= 2000, mv_cond ="mucus.viscosity > 1.5", tissue_cond = NULL, alpha = 0.05, 
Iter = 5000, hist_data = data, beta = beta, var = var_select)
data_folder <- "../Scenario/data/"
subject <- read.csv(paste(data_folder,"subject.csv", sep=''))
efficacy <- read.csv(paste(data_folder,"efficacy.csv", sep=''))
randomization <- read.csv(paste(data_folder,"randomization.csv", sep=''))
## merge the table
data <- merge(merge(subject, efficacy, by = ("subject")),
 randomization, by = "subject")
## 
data$treatment <- ifelse(data$arm == 'ACTIVE', 1, 0)
## Only keep those patients with duration > 300 days
## reduce the sample size from 444 to 398
data <- subset(data, duration > 300 & !is.na(mucus.viscosity))
## impute eye colour
data$eye.colour <- as.character(data$eye.colour)
data$eye.colour[is.na(data$eye.colour)] <-"Unavailable"
data$eye.colour <- as.factor(data$eye.colour)
overall_rslt <- glm(nosebleeds ~ treatment , data=data, family = poisson)
overall_rslt
summary(overall_rslt)
mucus_rslt <- glm(nosebleeds ~ treatment * mucus.viscosity, data=data, family = poisson)
summary(mucus_rslt)
coeff <- mucus_rslt$coefficient
cov_matrix <- summary(mucus_rslt)$cov.unscaled
mucus.viscosity = seq(0,6.5, by = .05)
mucus_effect <- coeff[2] + coeff[4] *  mucus.viscosity
mucus_stder <- sqrt(cov_matrix[2,2] + 2 * cov_matrix[2,4]*  mucus.viscosity + cov_matrix[4,4] *  mucus.viscosity ^2)
mucus_zscore <- mucus_effect / mucus_stder
## One side p_value P( z > |mucus_zscore| )
mucus_p_value <- 2 *(1- pnorm(abs(mucus_zscore), 0, 1))
## cutoff of mucus viscosity 
mucus_output <- data.frame(mucus.viscosity =  mucus.viscosity, mucus_p_value = mucus_p_value)
plot(mucus_p_value ~ mucus.viscosity, data=mucus_output, xlab = 'mucus viscosity', ylab = 'p_vlaue')
abline(0.05, 0, col = 2)
mucus_output
cov_matrix
tissue_rslt <- glm(nosebleeds ~ treatment * tissue.use, data=data, family = poisson)
summary(tissue_rslt)
tissue_rslt <- glm(nosebleeds ~ treatment * tissue.use -1, data=data, family = poisson)
summary(tissue_rslt)
library(glmnet)
full_rslt <- glm(nosebleeds ~ treatment *(mucus.viscosity + tissue.use + previous.year+ country + eye.colour),data=data, family = poisson)
X <- model.matrix(~ treatment *(mucus.viscosity + tissue.use + previous.year+ country + eye.colour),data=data)
glmnet_rslt <- cv.glmnet(x=X[,-1], y = data$nosebleeds,  family = 'poisson')
glmnet_rslt5 <- cv.glmnet(x=X[,-1], y = data$nosebleeds, alpha=.5, family = 'poisson')
glmnet_rslt$cvm[which(glmnet_rslt$lambda == glmnet_rslt$lambda.1se)]
glmnet_rslt5$cvm[which(glmnet_rslt5$lambda == glmnet_rslt5$lambda.1se)]
## variables selected using lambda.1se and alpha = .5 
coef(glmnet_rslt, s = 'lambda.1se') 
coeff <- coef(glmnet_rslt5, s = 'lambda.1se') 
beta <- coeff[which(as.matrix(coeff)!=0)]
var_select <- rownames(coeff)[which(as.matrix(coeff)!=0)] 
var_select <- var_select[-1] ## remove intercept
coeff 
source("./Simulation_fun.R")
## sample size = 800, general population
simulation_fun(n= 800, mv_cond =NULL, tissue_cond = NULL, alpha = 0.05, 
Iter = 5000, hist_data = data, beta = beta, var = var_select)
## sample size = 800, mucus viscosity > 1.2
simulation_fun(n= 800, mv_cond ="mucus.viscosity > 2", tissue_cond = NULL, alpha = 0.05, 
Iter = 5000, hist_data = data, beta = beta, var = var_select)
## sample size = 800, tissue.use == 'MEDIUM'
simulation_fun(n= 800, mv_cond = NULL, tissue_cond = "tissue.use== 'MEDIUM'", alpha = 0.05, 
Iter = 5000, hist_data = data, beta = beta, var = var_select)
##
simulation_fun(n= 3000, mv_cond =NULL, tissue_cond = NULL, alpha = 0.05, 
Iter = 5000, hist_data = data, beta = beta, var = var_select)
## sample size = 3000, mucus viscosity > 1.2
simulation_fun(n= 3000, mv_cond ="mucus.viscosity > 1.2", tissue_cond = NULL, alpha = 0.05, 
Iter = 5000, hist_data = data, beta = beta, var = var_select)
## sample size = 3000, tissue.use == 'MEDIUM'
simulation_fun(n= 3000, mv_cond = NULL, tissue_cond = "tissue.use== 'MEDIUM'", alpha = 0.05, 
Iter = 5000, hist_data = data, beta = beta, var = var_select)
## sample size = 2000, mucus viscosity > 1.5
simulation_fun(n= 2000, mv_cond ="mucus.viscosity > 1.5", tissue_cond = NULL, alpha = 0.05, 
Iter = 5000, hist_data = data, beta = beta, var = var_select)
beta
var_select
source("./Simulation_fun.R")
## sample size = 800, general population
simulation_fun(n= 800, mv_cond =NULL, tissue_cond = NULL, alpha = 0.05, 
Iter = 5000, hist_data = data, beta = beta, var = var_select)
## n -- sample size
## alpha -- significance level
## hist_data is training data, which is used to generate the empirical distributions
## beta -- the estimated coefficients
## var -- pass the selected variables using Elastic Net
## Distribution of explantory variables are fixed
dist_prev <- prop.table(table(hist_data$previous.year))
if(is.null(mv_cond))
dist_mv <- prop.table(table( mround(hist_data$mucus.viscosity,.5)))
if(!is.null(mv_cond))
dist_mv <- prop.table(table( mround(subset(hist_data, eval(parse(text=mv_cond)))$mucus.viscosity,.5)))
if(is.null(tissue_cond))
dist_tissue <- prop.table(table(hist_data$tissue))
if(!is.null(tissue_cond))
dist_tissue <- prop.table(table(subset(hist_data, eval(parse(text=tissue_cond)))$tissue))
## In the statistical model, only country %in% c("D","E","F","H") are used
country <- ifelse(as.character(hist_data$country) %in% c("D","E","F","H"), as.character(hist_data$country), "A")
dist_country <- prop.table(table(country))
p_value <- rep(NA, Iter)
#Simulate Data from their empirical distribution with assumption that the variables are independent
simu_data <- NULL
simu_data$previous.year <- sample(as.numeric(names(dist_prev)), n, prob = as.vector(dist_prev), replace = TRUE)
simu_data$mucus.viscosity <- sample(as.numeric(names(dist_mv)), n, prob = as.vector(dist_mv), replace = TRUE)
simu_data$tissue.use <- sample( names(dist_tissue) , n, prob = as.vector(dist_tissue), replace = TRUE)
simu_data$tissue.use <-  factor(simu_data$tissue.use, levels = names(dist_tissue))
simu_data$country <- sample( names(dist_country) , n, prob = as.vector(dist_country), replace = TRUE)
simu_data$treatment <- sample( c(0,1) , n, prob = c(.5,.5), replace = TRUE)
simu_data <- as.data.frame(simu_data)
## Generate response variable -- Nosebleeds
X <- model.matrix(~ treatment *(mucus.viscosity + tissue.use + previous.year+ country),data=simu_data)
X <- X[,var]
X[1,]
dim(X)
X%85beta
X%*%beta
for(i in 1:Iter){
#Simulate Data from their empirical distribution with assumption that the variables are independent
simu_data <- NULL
simu_data$previous.year <- sample(as.numeric(names(dist_prev)), n, prob = as.vector(dist_prev), replace = TRUE)
simu_data$mucus.viscosity <- sample(as.numeric(names(dist_mv)), n, prob = as.vector(dist_mv), replace = TRUE)
simu_data$tissue.use <- sample( names(dist_tissue) , n, prob = as.vector(dist_tissue), replace = TRUE)
simu_data$tissue.use <-  factor(simu_data$tissue.use, levels = names(dist_tissue))
simu_data$country <- sample( names(dist_country) , n, prob = as.vector(dist_country), replace = TRUE)
simu_data$treatment <- sample( c(0,1) , n, prob = c(.5,.5), replace = TRUE)
simu_data <- as.data.frame(simu_data)
## Generate response variable -- Nosebleeds
X <- model.matrix(~ treatment *(mucus.viscosity + tissue.use + previous.year+ country),data=simu_data)
X <- X[,var]
lambda <- exp(X %*% beta)
nosebleeds <- rpois(n, lambda)
## Test treatment effect
p_value[i] <- summary(glm(nosebleeds ~ simu_data$treatment, family = poisson))$coefficients[2,4]
}
simulation_fun
source("./Simulation_fun.R")
simulation_fun(n= 800, mv_cond =NULL, tissue_cond = NULL, alpha = 0.05, 
Iter = 5000, hist_data = data, beta = beta, var = var_select)
dim(data)
dim(hist_data)
rm(list=ls())
#######################
## 0. Load data
#######################
data_folder <- "../Scenario/data/"
subject <- read.csv(paste(data_folder,"subject.csv", sep=''))
efficacy <- read.csv(paste(data_folder,"efficacy.csv", sep=''))
randomization <- read.csv(paste(data_folder,"randomization.csv", sep=''))
## merge the table
data <- merge(merge(subject, efficacy, by = ("subject")),
 randomization, by = "subject")
## 
data$treatment <- ifelse(data$arm == 'ACTIVE', 1, 0)
## Only keep those patients with duration > 300 days
## reduce the sample size from 444 to 398
data <- subset(data, duration > 300 & !is.na(mucus.viscosity))
## impute eye colour
data$eye.colour <- as.character(data$eye.colour)
data$eye.colour[is.na(data$eye.colour)] <-"Unavailable"
data$eye.colour <- as.factor(data$eye.colour)
############################
## 1. Exploratory Analysis
############################
############################
## 1.0. Overall effectiveness
############################
overall_rslt <- glm(nosebleeds ~ treatment , data=data, family = poisson)
#############################
## 1.1. Effect of Mucus Viscosity
###############################
mucus_rslt <- glm(nosebleeds ~ treatment * mucus.viscosity, data=data, family = poisson)
## treatment effect of different level of mucus viscosity
coeff <- mucus_rslt$coefficient
cov_matrix <- summary(mucus_rslt)$cov.unscaled
mucus.viscosity = seq(0,6.5, by = .05)
mucus_effect <- coeff[2] + coeff[4] *  mucus.viscosity
mucus_stder <- sqrt(cov_matrix[2,2] + 2 * cov_matrix[2,4]*  mucus.viscosity + cov_matrix[4,4] *  mucus.viscosity ^2)
mucus_zscore <- mucus_effect / mucus_stder
## One side p_value P( z > |mucus_zscore| )
mucus_p_value <- 2 *(1- pnorm(abs(mucus_zscore), 0, 1))
## cutoff of mucus viscosity 
mucus_output <- data.frame(mucus.viscosity =  mucus.viscosity, mucus_p_value = mucus_p_value)
plot(mucus_p_value ~ mucus.viscosity, data=mucus_output, xlab = 'mucus viscosity', ylab = 'p_vlaue')
abline(0.05, 0, col = 2)
#plot(data$mucus.viscosity , mucus_effect )
#points(data$mucus.viscosity , mucus_effect + mucus_stder * 1.96 )
#points(data$mucus.viscosity , mucus_effect - mucus_stder * 1.96 )
#############################
## 1.2. Effect of Tissue usage
###############################
tissue_rslt <- glm(nosebleeds ~ treatment * tissue.use, data=data, family = poisson)
##############################
## 2. Statistical Model
##############################
###################################################################
## 2.1. use Elastic Net (with cross-validation) to do variable selection over the full model 
####################################################################
library(glmnet)
full_rslt <- glm(nosebleeds ~ treatment *(mucus.viscosity + tissue.use + previous.year+ country + eye.colour),data=data, family = poisson)
X <- model.matrix(~ treatment *(mucus.viscosity + tissue.use + previous.year+ country + eye.colour),data=data)
glmnet_rslt <- cv.glmnet(x=X[,-1], y = data$nosebleeds,  family = 'poisson')
glmnet_rslt5 <- cv.glmnet(x=X[,-1], y = data$nosebleeds, alpha=.5, family = 'poisson')
glmnet_rslt$cvm[which(glmnet_rslt$lambda == glmnet_rslt$lambda.1se)]
glmnet_rslt5$cvm[which(glmnet_rslt5$lambda == glmnet_rslt5$lambda.1se)]
## variables selected using lambda.1se and alpha = .5 
coef(glmnet_rslt, s = 'lambda.1se') 
coeff <- coef(glmnet_rslt5, s = 'lambda.1se') 
beta <- coeff[which(as.matrix(coeff)!=0)]
var_select <- rownames(coeff)[which(as.matrix(coeff)!=0)] 
var_select <- var_select[-1] ## remove intercept
## randomForest
#rf_rslt <- randomForest(nosebleeds ~ treatment  + mucus.viscosity + tissue.use + previous.year+ country + eye.colour, data=data, importance=TRUE,
#                        proximity=TRUE)
#########################################
## 3. Simulation
#########################################
coeff
source("./Simulation_fun.R")
## sample size = 800, general population
simulation_fun(n= 800, mv_cond =NULL, tissue_cond = NULL, alpha = 0.05, 
Iter = 5000, hist_data = data, beta = beta, var = var_select)
var_select
beta
glmnet_rslt <- cv.glmnet(x=X[,-1], y = data$nosebleeds,  family = 'poisson')
glmnet_rslt5 <- cv.glmnet(x=X[,-1], y = data$nosebleeds, alpha=.5, family = 'poisson')
glmnet_rslt$cvm[which(glmnet_rslt$lambda == glmnet_rslt$lambda.1se)]
glmnet_rslt5$cvm[which(glmnet_rslt5$lambda == glmnet_rslt5$lambda.1se)]
## variables selected using lambda.1se and alpha = .5 
coef(glmnet_rslt, s = 'lambda.1se') 
coeff <- coef(glmnet_rslt5, s = 'lambda.1se') 
dim(X)
coeff
## sample size = 800, general population
simulation_fun(n= 800, mv_cond =NULL, tissue_cond = NULL, alpha = 0.05, 
Iter = 5000, hist_data = data, beta = beta, var = var_select)
var_select
beta <- coeff[which(as.matrix(coeff)!=0)]
var_select <- rownames(coeff)[which(as.matrix(coeff)!=0)] 
var_select <- var_select[-1] ## remove intercept
simulation_fun(n= 800, mv_cond =NULL, tissue_cond = NULL, alpha = 0.05, 
Iter = 5000, hist_data = data, beta = beta, var = var_select)
beta
 mv_cond =NULL
 tissue_cond = NULL
alpha = 0.05
var = var_select
 beta = beta
hist_data = data
Iter = 1000
## Distribution of explantory variables are fixed
dist_prev <- prop.table(table(hist_data$previous.year))
if(is.null(mv_cond))
dist_mv <- prop.table(table( mround(hist_data$mucus.viscosity,.5)))
if(!is.null(mv_cond))
dist_mv <- prop.table(table( mround(subset(hist_data, eval(parse(text=mv_cond)))$mucus.viscosity,.5)))
if(is.null(tissue_cond))
dist_tissue <- prop.table(table(hist_data$tissue))
if(!is.null(tissue_cond))
dist_tissue <- prop.table(table(subset(hist_data, eval(parse(text=tissue_cond)))$tissue))
## In the statistical model, only country %in% c("D","E","F","H") are used
country <- ifelse(as.character(hist_data$country) %in% c("D","E","F","H"), as.character(hist_data$country), "A")
dist_country <- prop.table(table(country))
n=400
#Simulate Data from their empirical distribution with assumption that the variables are independent
simu_data <- NULL
simu_data$previous.year <- sample(as.numeric(names(dist_prev)), n, prob = as.vector(dist_prev), replace = TRUE)
simu_data$mucus.viscosity <- sample(as.numeric(names(dist_mv)), n, prob = as.vector(dist_mv), replace = TRUE)
simu_data$tissue.use <- sample( names(dist_tissue) , n, prob = as.vector(dist_tissue), replace = TRUE)
simu_data$tissue.use <-  factor(simu_data$tissue.use, levels = names(dist_tissue))
simu_data$country <- sample( names(dist_country) , n, prob = as.vector(dist_country), replace = TRUE)
simu_data$treatment <- sample( c(0,1) , n, prob = c(.5,.5), replace = TRUE)
simu_data <- as.data.frame(simu_data)
## Generate response variable -- Nosebleeds
X <- model.matrix(~ treatment *(mucus.viscosity + tissue.use + previous.year+ country),data=simu_data)
X <- X[,var]
lambda <- exp(X %*% beta)
nosebleeds <- rpois(n, lambda)
X[1,]
dim(X)
length(beta)
var_select <- rownames(coeff)[which(as.matrix(coeff)!=0)] 
## sample size = 800, general population
simulation_fun(n= 800, mv_cond =NULL, tissue_cond = NULL, alpha = 0.05, 
Iter = 5000, hist_data = data, beta = beta, var = var_select)
## sample size = 800, general population
simulation_fun(n= 800, mv_cond =NULL, tissue_cond = NULL, alpha = 0.05, 
Iter = 5000, hist_data = data, beta = beta, var = var_select)
## sample size = 800, mucus viscosity > 1.2
simulation_fun(n= 800, mv_cond ="mucus.viscosity > 2", tissue_cond = NULL, alpha = 0.05, 
Iter = 5000, hist_data = data, beta = beta, var = var_select)
## sample size = 800, tissue.use == 'MEDIUM'
simulation_fun(n= 800, mv_cond = NULL, tissue_cond = "tissue.use== 'MEDIUM'", alpha = 0.05, 
Iter = 5000, hist_data = data, beta = beta, var = var_select)
##
simulation_fun(n= 3000, mv_cond =NULL, tissue_cond = NULL, alpha = 0.05, 
Iter = 5000, hist_data = data, beta = beta, var = var_select)
## sample size = 3000, mucus viscosity > 1.2
simulation_fun(n= 3000, mv_cond ="mucus.viscosity > 1.2", tissue_cond = NULL, alpha = 0.05, 
Iter = 5000, hist_data = data, beta = beta, var = var_select)
## sample size = 3000, tissue.use == 'MEDIUM'
simulation_fun(n= 3000, mv_cond = NULL, tissue_cond = "tissue.use== 'MEDIUM'", alpha = 0.05, 
Iter = 5000, hist_data = data, beta = beta, var = var_select)
## sample size = 2000, mucus viscosity > 1.5
simulation_fun(n= 2000, mv_cond ="mucus.viscosity > 1.5", tissue_cond = NULL, alpha = 0.05, 
Iter = 5000, hist_data = data, beta = beta, var = var_select)
## sample size = 2000, mucus viscosity > 1.2
simulation_fun(n= 2000, mv_cond ="mucus.viscosity > 1.2", tissue_cond = NULL, alpha = 0.05, 
Iter = 5000, hist_data = data, beta = beta, var = var_select)
rm(list=ls())
#######################
## 0. Load data
#######################
data_folder <- "../Scenario/data/"
subject <- read.csv(paste(data_folder,"subject.csv", sep=''))
efficacy <- read.csv(paste(data_folder,"efficacy.csv", sep=''))
randomization <- read.csv(paste(data_folder,"randomization.csv", sep=''))
## merge the table
data <- merge(merge(subject, efficacy, by = ("subject")),
 randomization, by = "subject")
## 
data$treatment <- ifelse(data$arm == 'ACTIVE', 1, 0)
## Only keep those patients with duration > 300 days
## reduce the sample size from 444 to 398
data <- subset(data, duration > 300 & !is.na(mucus.viscosity))
## impute eye colour
data$eye.colour <- as.character(data$eye.colour)
data$eye.colour[is.na(data$eye.colour)] <-"Unavailable"
data$eye.colour <- as.factor(data$eye.colour)
############################
## 1. Exploratory Analysis
############################
############################
## 1.0. Overall effectiveness
############################
overall_rslt <- glm(nosebleeds ~ treatment , data=data, family = poisson)
#############################
## 1.1. Effect of Mucus Viscosity
###############################
mucus_rslt <- glm(nosebleeds ~ treatment * mucus.viscosity, data=data, family = poisson)
## treatment effect of different level of mucus viscosity
coeff <- mucus_rslt$coefficient
cov_matrix <- summary(mucus_rslt)$cov.unscaled
mucus.viscosity = seq(0,6.5, by = .05)
mucus_effect <- coeff[2] + coeff[4] *  mucus.viscosity
mucus_stder <- sqrt(cov_matrix[2,2] + 2 * cov_matrix[2,4]*  mucus.viscosity + cov_matrix[4,4] *  mucus.viscosity ^2)
mucus_zscore <- mucus_effect / mucus_stder
## One side p_value P( z > |mucus_zscore| )
mucus_p_value <- 2 *(1- pnorm(abs(mucus_zscore), 0, 1))
## cutoff of mucus viscosity 
mucus_output <- data.frame(mucus.viscosity =  mucus.viscosity, mucus_p_value = mucus_p_value)
plot(mucus_p_value ~ mucus.viscosity, data=mucus_output, xlab = 'mucus viscosity', ylab = 'p_vlaue')
abline(0.05, 0, col = 2)
#plot(data$mucus.viscosity , mucus_effect )
#points(data$mucus.viscosity , mucus_effect + mucus_stder * 1.96 )
#points(data$mucus.viscosity , mucus_effect - mucus_stder * 1.96 )
#############################
## 1.2. Effect of Tissue usage
###############################
tissue_rslt <- glm(nosebleeds ~ treatment * tissue.use, data=data, family = poisson)
##############################
## 2. Statistical Model
##############################
###################################################################
## 2.1. use Elastic Net (with cross-validation) to do variable selection over the full model 
####################################################################
library(glmnet)
full_rslt <- glm(nosebleeds ~ treatment *(mucus.viscosity + tissue.use + previous.year+ country + eye.colour),data=data, family = poisson)
X <- model.matrix(~ treatment *(mucus.viscosity + tissue.use + previous.year+ country + eye.colour),data=data)
glmnet_rslt <- cv.glmnet(x=X[,-1], y = data$nosebleeds,  family = 'poisson')
glmnet_rslt5 <- cv.glmnet(x=X[,-1], y = data$nosebleeds, alpha=.5, family = 'poisson')
glmnet_rslt$cvm[which(glmnet_rslt$lambda == glmnet_rslt$lambda.1se)]
glmnet_rslt5$cvm[which(glmnet_rslt5$lambda == glmnet_rslt5$lambda.1se)]
## variables selected using lambda.1se and alpha = .5 
coef(glmnet_rslt, s = 'lambda.1se') 
coeff <- coef(glmnet_rslt5, s = 'lambda.1se') 
beta <- coeff[which(as.matrix(coeff)!=0)]
var_select <- rownames(coeff)[which(as.matrix(coeff)!=0)] 
## randomForest
#rf_rslt <- randomForest(nosebleeds ~ treatment  + mucus.viscosity + tissue.use + previous.year+ country + eye.colour, data=data, importance=TRUE,
#                        proximity=TRUE)
#########################################
## 3. Simulation
#########################################
source("./Simulation_fun.R")
## sample size = 800, general population
simulation_fun(n= 800, mv_cond =NULL, tissue_cond = NULL, alpha = 0.05, 
Iter = 5000, hist_data = data, beta = beta, var = var_select)
## sample size = 800, mucus viscosity > 1.2
simulation_fun(n= 800, mv_cond ="mucus.viscosity > 2", tissue_cond = NULL, alpha = 0.05, 
Iter = 5000, hist_data = data, beta = beta, var = var_select)
## sample size = 800, tissue.use == 'MEDIUM'
simulation_fun(n= 800, mv_cond = NULL, tissue_cond = "tissue.use== 'MEDIUM'", alpha = 0.05, 
Iter = 5000, hist_data = data, beta = beta, var = var_select)
##
simulation_fun(n= 2000, mv_cond =NULL, tissue_cond = NULL, alpha = 0.05, 
Iter = 5000, hist_data = data, beta = beta, var = var_select)
## sample size = 2000, mucus viscosity > 1.2
simulation_fun(n= 2000, mv_cond ="mucus.viscosity > 1.2", tissue_cond = NULL, alpha = 0.05, 
Iter = 5000, hist_data = data, beta = beta, var = var_select)
## sample size = 2000, tissue.use == 'MEDIUM'
simulation_fun(n= 2000, mv_cond = NULL, tissue_cond = "tissue.use== 'MEDIUM'", alpha = 0.05, 
Iter = 5000, hist_data = data, beta = beta, var = var_select)
coeff
glmnet_rslt <- cv.glmnet(x=X[,-1], y = data$nosebleeds,  family = 'poisson')
glmnet_rslt5 <- cv.glmnet(x=X[,-1], y = data$nosebleeds, alpha=.5, family = 'poisson')
glmnet_rslt$cvm[which(glmnet_rslt$lambda == glmnet_rslt$lambda.1se)]
glmnet_rslt5$cvm[which(glmnet_rslt5$lambda == glmnet_rslt5$lambda.1se)]
coef(glmnet_rslt, s = 'lambda.1se') 
coeff <- coef(glmnet_rslt5, s = 'lambda.1se') 
beta <- coeff[which(as.matrix(coeff)!=0)]
var_select <- rownames(coeff)[which(as.matrix(coeff)!=0)] 
coeff
glmnet_rslt <- cv.glmnet(x=X[,-1], y = data$nosebleeds,  family = 'poisson')
glmnet_rslt5 <- cv.glmnet(x=X[,-1], y = data$nosebleeds, alpha=.5, family = 'poisson')
glmnet_rslt$cvm[which(glmnet_rslt$lambda == glmnet_rslt$lambda.1se)]
glmnet_rslt5$cvm[which(glmnet_rslt5$lambda == glmnet_rslt5$lambda.1se)]
## variables selected using lambda.1se and alpha = .5 
coef(glmnet_rslt, s = 'lambda.1se') 
coef(glmnet_rslt5, s = 'lambda.1se') 
coeff <- coef(glmnet_rslt5, s = 'lambda.1se') 
glmnet_rslt <- cv.glmnet(x=X[,-1], y = data$nosebleeds,  family = 'poisson')
glmnet_rslt5 <- cv.glmnet(x=X[,-1], y = data$nosebleeds, alpha=.5, family = 'poisson')
glmnet_rslt$cvm[which(glmnet_rslt$lambda == glmnet_rslt$lambda.1se)]
glmnet_rslt5$cvm[which(glmnet_rslt5$lambda == glmnet_rslt5$lambda.1se)]
## variables selected using lambda.1se and alpha = .5 
coef(glmnet_rslt, s = 'lambda.1se') 
coef(glmnet_rslt5, s = 'lambda.1se') 
coeff <- coef(glmnet_rslt5, s = 'lambda.1se') 
dim(data)
coeff <- coef(glmnet_rslt5, s = 'lambda.min') 
coeff
glmnet_rslt$cvm[which(glmnet_rslt$lambda == glmnet_rslt$lambda.1se)]
glmnet_rslt$cvm[which(glmnet_rslt$lambda == glmnet_rslt$lambda.min)]
glmnet_rslt5$cvm[which(glmnet_rslt5$lambda == glmnet_rslt$lambda.min)]
glmnet_rslt5$cvm[which(glmnet_rslt5$lambda == glmnet_rslt5$lambda.min)]
glmnet_rslt <- cv.glmnet(x=X[,-1], y = data$nosebleeds,  family = 'poisson')
glmnet_rslt5 <- cv.glmnet(x=X[,-1], y = data$nosebleeds, alpha=.5, family = 'poisson')
glmnet_rslt$cvm[which(glmnet_rslt$lambda == glmnet_rslt$lambda.1se)]
glmnet_rslt5$cvm[which(glmnet_rslt5$lambda == glmnet_rslt5$lambda.1se)]
## variables selected using lambda.1se and alpha = .5 
coef(glmnet_rslt, s = 'lambda.1se')[which(as.matrix(coef(glmnet_rslt, s = 'lambda.1se'))!=0)] 
coef(glmnet_rslt5, s = 'lambda.1se')[which(as.matrix(coef(glmnet_rslt5, s = 'lambda.1se'))!=0)] 
coef(glmnet_rslt, s = 'lambda.1se')[which(as.matrix(coef(glmnet_rslt, s = 'lambda.1se'))!=0),] 
coef(glmnet_rslt5, s = 'lambda.1se')[which(as.matrix(coef(glmnet_rslt5, s = 'lambda.1se'))!=0),] 
coeff <- coef(glmnet_rslt5, s = 'lambda.1se') 
beta <- coeff[which(as.matrix(coeff)!=0)]
var_select <- rownames(coeff)[which(as.matrix(coeff)!=0)] 
## randomForest
#rf_rslt <- randomForest(nosebleeds ~ treatment  + mucus.viscosity + tissue.use + previous.year+ country + eye.colour, data=data, importance=TRUE,
#                        proximity=TRUE)
#########################################
## 3. Simulation
#########################################
source("./Simulation_fun.R")
## sample size = 800, general population
simulation_fun(n= 800, mv_cond =NULL, tissue_cond = NULL, alpha = 0.05, 
Iter = 5000, hist_data = data, beta = beta, var = var_select)
## sample size = 800, mucus viscosity > 1.2
simulation_fun(n= 800, mv_cond ="mucus.viscosity > 2", tissue_cond = NULL, alpha = 0.05, 
Iter = 5000, hist_data = data, beta = beta, var = var_select)
## sample size = 800, tissue.use == 'MEDIUM'
simulation_fun(n= 800, mv_cond = NULL, tissue_cond = "tissue.use== 'MEDIUM'", alpha = 0.05, 
Iter = 5000, hist_data = data, beta = beta, var = var_select)
##
simulation_fun(n= 2000, mv_cond =NULL, tissue_cond = NULL, alpha = 0.05, 
Iter = 5000, hist_data = data, beta = beta, var = var_select)
## sample size = 2000, mucus viscosity > 1.2
simulation_fun(n= 2000, mv_cond ="mucus.viscosity > 1.2", tissue_cond = NULL, alpha = 0.05, 
Iter = 5000, hist_data = data, beta = beta, var = var_select)
## sample size = 2000, tissue.use == 'MEDIUM'
simulation_fun(n= 2000, mv_cond = NULL, tissue_cond = "tissue.use== 'MEDIUM'", alpha = 0.05, 
Iter = 5000, hist_data = data, beta = beta, var = var_select)
q()
